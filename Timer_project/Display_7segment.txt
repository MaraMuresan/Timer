LIBRARY IEEE;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY Display_7segment IS
  PORT (
  	S0, S1, M0, M1: IN std_logic_vector(3 downto 0);
  	anode: OUT std_logic_vector(3 downto 0);
  	clock: IN std_logic;
  	cathode: OUT std_logic_vector(6 downto 0)
    );
END Display_7segment;

ARCHITECTURE TypeArchitecture OF Display_7segment IS

signal count: std_logic_vector(15 downto 0);
signal number: std_logic_vector(3 downto 0);

BEGIN


process(clock)
begin
	if (rising_edge(clock)) then count <= count + 1;
	end if;
end process;

--choosing the anode

process(count)
begin
	case(count(15 downto 14)) is
		when "00" => anode <= not "1110";
		when "01" => anode <= not "1101";
		when "10" => anode <= not "1011";
		when others => anode <= not "0111";
	end case;
end process;

--choosing the digits

process(count, S0, S1, M0, M1)
begin
	case(count(15 downto 14)) is
		when "00" => number <= S0;
		when "01" => number <= S1;
		when "10" => number <= M0;
		when others => number <= M1;
	end case;
end process;

--7 Segment BCD Decoder

process(number)
begin
	case number is
	when "0000" => cathode <= not "0000001"; --0
	when "0001" => cathode <= not "1001111"; --1
	when "0010" => cathode <= not "0010010"; --2
	when "0011" => cathode <= not "0000110"; --3
	when "0100" => cathode <= not "1001100"; --4
	when "0101" => cathode <= not "0100100"; --5
	when "0110" => cathode <= not "0100000"; --6
	when "0111" => cathode <= not "0001111"; --7
	when "1000" => cathode <= not "0000000"; --8
	when "1001" => cathode <= not "0000100"; --9
	when others => cathode <= not "0000001"; --0
	end case;
end process;
	
END TypeArchitecture;